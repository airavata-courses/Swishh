def getEnvVar(String paramName){
    return sh (script: "grep -w '${paramName}' user-service/project.properties|cut -d'=' -f2", returnStdout: true).trim();
}

def getTimeStamp(){
    return sh (script: "date +'%Y%m%d%H%M%S%N' | sed 's/[0-9][0-9][0-9][0-9][0-9][0-9]\$//g'", returnStdout: true).trim();
}

pipeline {

    agent any

    environment {
        GIT_COMMIT_SHORT_HASH = sh (script: "git rev-parse --short HEAD", returnStdout: true)
    }

    stages {
        stage('Init') {
            steps {
                script {
                    env.APP_NAME = getEnvVar('APP_NAME')
                    env.CURRENT_BRANCH = env.BRANCH_NAME
                    env.TIMESTAMP = getTimeStamp()
                    env.IMAGE_NAME = getEnvVar('IMAGE_NAME')
                    env.PORT = getEnvVar('PORT')
                    env.TARGET_PORT = getEnvVar('TARGET_PORT')
                    env.CONTAINER_PORT = getEnvVar('CONTAINER_PORT')
                    env.REPLICA = getEnvVar('REPLICA')
                    env.MAX_REPLICA = getEnvVar('MAX_REPLICA')
                    env.SERVICE_TYPE = getEnvVar('SERVICE_TYPE')
                    env.SERVICE_PATH = getEnvVar('SERVICE_PATH')
                    env.RELEASE_TAG = getEnvVar('RELEASE_TAG')
                    env.DOCKER_PROJECT_NAMESPACE = getEnvVar('DOCKER_PROJECT_NAMESPACE')
                    env.JENKINS_DOCKER_CREDENTIALS_ID = getEnvVar('JENKINS_DOCKER_CREDENTIALS_ID')
                    env.PROJECT_PATH = getEnvVar('PROJECT_PATH')
                    env.GITHUB_URL_YAML = "https://raw.githubusercontent.com/airavata-courses/Swishh/${CURRENT_BRANCH}/k8s/kube.yaml"
                    env.GITHUB_URL_SH = "https://raw.githubusercontent.com/airavata-courses/Swishh/${CURRENT_BRANCH}/k8s/process_file.sh"
                }
            }
        }
	
		stage('Build App')
          {
            steps
             {
		     sh """ 
		     cd $WORKSPACE/user-service/
			 virtualenv venv
			 . venv/bin/activate 
			 pip install -r requirements.txt
		     ls -ltr
		     """
            }
          }
		stage('Dockerising'){
			steps{
				//sh 'docker login -u swishhspring2021 -p Spring@2021'
				sh """ 
				cd $WORKSPACE/user-service/
				docker build -t swishhspring2021/userservice:latest .
				"""
				
			}
		}
		stage('Artifact Upload'){
			steps{
				sh 'docker login -u swishhspring2021 -p Spring@2021'
				sh 'docker push swishhspring2021/userservice:latest'
			}
		}
    }
}
